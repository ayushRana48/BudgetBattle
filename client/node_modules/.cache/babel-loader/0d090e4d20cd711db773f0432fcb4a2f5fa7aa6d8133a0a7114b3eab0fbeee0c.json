{"ast":null,"code":"var _jsxFileName = \"/Users/aryarana/Desktop/plaid_app/client/src/PlaidToken.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { usePlaidLink } from \"react-plaid-link\";\n// import './App.css'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = \"http://localhost:3500/plaid\";\n\n// function PlaidAuth({publicToken}) {\n//   const [account, setAccount] = useState();\n\n//   useEffect(() => {\n//     async function fetchData() {\n//       let accessToken = await axios.post(\"/exchange_public_token\", {public_token: publicToken});\n//       console.log(\"accessToken\", accessToken.data);\n//       const auth = await axios.post(\"/auth\", {access_token: accessToken.data.accessToken});\n//       console.log(\"auth data \", auth.data);\n//       setAccount(auth.data.numbers.ach[0]);\n//     }\n//     fetchData();\n//   }, []);\n//   return account && (\n//       <>\n//         <p>Account number: {account.account}</p>\n//         <p>Routing number: {account.routing}</p>\n//       </>\n//   );\n// }\n\nfunction PlaidToken() {\n  _s();\n  const [linkToken, setLinkToken] = useState('');\n  //   const [publicToken, setPublicToken] = useState();\n\n  useEffect(() => {\n    async function fetch() {\n      const response = await axios.post(\"/create_link_token\");\n      //   setLinkToken(response.data.link_token);\n      console.log(\"respnse\", response.data);\n    }\n    fetch();\n  }, []);\n  const {\n    open,\n    ready\n  } = usePlaidLink({\n    token: linkToken,\n    onSuccess: (public_token, metadata) => {\n      //   setPublicToken(public_token);\n      console.log(\"success\", public_token, metadata);\n      // send public_token to server\n    }\n  });\n\n  //   return publicToken ? (<PlaidAuth publicToken={publicToken} />) : (\n  //       <button onClick={() => open()} disabled={!ready}>\n  //         Connect a bank account\n  //       </button>\n  //   );\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(PlaidToken, \"onpyaplAG+uS6lmYx2S8A8fr1TA=\", false, function () {\n  return [usePlaidLink];\n});\n_c = PlaidToken;\nexport default PlaidToken;\nvar _c;\n$RefreshReg$(_c, \"PlaidToken\");","map":{"version":3,"names":["useEffect","useState","axios","usePlaidLink","jsxDEV","_jsxDEV","defaults","baseURL","PlaidToken","_s","linkToken","setLinkToken","fetch","response","post","console","log","data","open","ready","token","onSuccess","public_token","metadata","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aryarana/Desktop/plaid_app/client/src/PlaidToken.js"],"sourcesContent":["import {useEffect, useState} from 'react'\nimport axios from \"axios\";\nimport {usePlaidLink} from \"react-plaid-link\";\n// import './App.css'\n\naxios.defaults.baseURL =\"http://localhost:3500/plaid\"\n\n// function PlaidAuth({publicToken}) {\n//   const [account, setAccount] = useState();\n\n//   useEffect(() => {\n//     async function fetchData() {\n//       let accessToken = await axios.post(\"/exchange_public_token\", {public_token: publicToken});\n//       console.log(\"accessToken\", accessToken.data);\n//       const auth = await axios.post(\"/auth\", {access_token: accessToken.data.accessToken});\n//       console.log(\"auth data \", auth.data);\n//       setAccount(auth.data.numbers.ach[0]);\n//     }\n//     fetchData();\n//   }, []);\n//   return account && (\n//       <>\n//         <p>Account number: {account.account}</p>\n//         <p>Routing number: {account.routing}</p>\n//       </>\n//   );\n// }\n\nfunction PlaidToken() {\n  const [linkToken, setLinkToken] = useState('');\n//   const [publicToken, setPublicToken] = useState();\n\n  useEffect(() => {\n    async function fetch() {\n      const response = await axios.post(\"/create_link_token\");\n    //   setLinkToken(response.data.link_token);\n    console.log(\"respnse\", response.data)\n    }\n    fetch();\n  }, []);\n\n  const { open, ready } = usePlaidLink({\n    token: linkToken,\n    onSuccess: (public_token, metadata) => {\n    //   setPublicToken(public_token);\n      console.log(\"success\", public_token, metadata);\n      // send public_token to server\n    },\n  });\n\n//   return publicToken ? (<PlaidAuth publicToken={publicToken} />) : (\n//       <button onClick={() => open()} disabled={!ready}>\n//         Connect a bank account\n//       </button>\n//   );\n    return(\n        <p>hi</p>\n    )\n}\n\nexport default PlaidToken"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,YAAY,QAAO,kBAAkB;AAC7C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEAH,KAAK,CAACI,QAAQ,CAACC,OAAO,GAAE,6BAA6B;;AAErD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD;;EAEED,SAAS,CAAC,MAAM;IACd,eAAeY,KAAKA,CAAA,EAAG;MACrB,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,oBAAoB,CAAC;MACzD;MACAC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,QAAQ,CAACI,IAAI,CAAC;IACrC;IACAL,KAAK,EAAE;EACT,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM;IAAEM,IAAI;IAAEC;EAAM,CAAC,GAAGhB,YAAY,CAAC;IACnCiB,KAAK,EAAEV,SAAS;IAChBW,SAAS,EAAEA,CAACC,YAAY,EAAEC,QAAQ,KAAK;MACvC;MACER,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEM,YAAY,EAAEC,QAAQ,CAAC;MAC9C;IACF;EACF,CAAC,CAAC;;EAEJ;EACA;EACA;EACA;EACA;EACI,oBACIlB,OAAA;IAAAmB,QAAA,EAAG;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAI;AAEjB;AAACnB,EAAA,CA9BQD,UAAU;EAAA,QAaOL,YAAY;AAAA;AAAA0B,EAAA,GAb7BrB,UAAU;AAgCnB,eAAeA,UAAU;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}