{"ast":null,"code":"var _jsxFileName = \"/Users/aryarana/Desktop/plaid_app/client/src/dash/SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar(_ref) {\n  _s();\n  let {\n    groupId,\n    currentUser\n  } = _ref;\n  const [people, setPeople] = useState([]);\n  const [query, setQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3500/users/getAll').then(response => response.json()).then(data => {\n      console.log(data);\n      const list = data.map(x => x.username);\n      setPeople(list);\n    }).catch(err => console.log(err));\n    console.log(\"call two\");\n  }, []);\n  function handleQueryChange(event) {\n    const newQuery = event.target.value;\n    setQuery(newQuery);\n    console.log(people);\n    let results = people.filter(person => person.toLowerCase().includes(newQuery.toLowerCase()));\n    const index = results.indexOf(currentUser);\n    results.splice(index, 1);\n    setSearchResults(results);\n  }\n  function addUser() {\n    if (!people.includes(query)) {\n      alert(\"Not registered user\");\n    } else {\n      fetch(\"http://localhost:3500/group/add\", {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"user\": query,\n          \"groupId\": groupId\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      }).catch(err => console.log(err));\n    }\n  }\n  const inputStyle = `${searchResults.length > 0 ? \"rounded-none rounded-t-md\" : \"rounded-md\"} focus:outline-none border-2 p-1.5 placeholder-ml-4 border-purple mt-2`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: handleQueryChange,\n      placeholder: \"Search people...\",\n      className: inputStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"border w-48 mx-auto border-hoverGray rounded-b-md divide-y divide-hoverGray\",\n      children: searchResults.slice(0, 3).map(person => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => setQuery(person),\n        className: \"px-4 py-2 hover:cursor-pointer hover:bg-hoverGray\",\n        children: person\n      }, person.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addUser,\n      className: \"hover:bg-darkPurple rounded-md bg-purple px-4  text-white mb-8  mt-2\",\n      children: \"add member\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchBar, \"ND6dOYXHIjcDa671tLVcPHS8Dy4=\");\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SearchBar","_ref","_s","groupId","currentUser","people","setPeople","query","setQuery","searchResults","setSearchResults","fetch","then","response","json","data","console","log","list","map","x","username","catch","err","handleQueryChange","event","newQuery","target","value","results","filter","person","toLowerCase","includes","index","indexOf","splice","addUser","alert","method","headers","body","JSON","stringify","inputStyle","length","children","type","onChange","placeholder","className","fileName","_jsxFileName","lineNumber","columnNumber","slice","onClick","id","_c","$RefreshReg$"],"sources":["/Users/aryarana/Desktop/plaid_app/client/src/dash/SearchBar.js"],"sourcesContent":["import React, { useState,useEffect } from 'react';\n\nexport default function SearchBar({groupId,currentUser}) {\n  const[people,setPeople]=useState([])\n  \n  const [query, setQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:3500/users/getAll')\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        const list = data.map(x=>x.username)\n        setPeople(list)\n      })\n      .catch(err => console.log(err));\n    console.log(\"call two\")\n  }, []);\n  \n\n  function handleQueryChange(event) {\n    const newQuery = event.target.value;\n    setQuery(newQuery);\n\n    console.log(people)\n    let results = people.filter((person) =>\n      person.toLowerCase().includes(newQuery.toLowerCase())\n    );\n    const index = results.indexOf(currentUser);\n    results.splice(index, 1);\n    setSearchResults(results);\n  }\n\n  function addUser(){\n    if(!people.includes(query)){\n      alert(\"Not registered user\")\n    }\n    else{\n      fetch(\"http://localhost:3500/group/add\", {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body:JSON.stringify({\n                \"user\":query,\n                \"groupId\":groupId\n            }),\n        })\n        .then(response => response.json())\n        .then(data => {\n            console.log(data)\n        })\n        .catch(err => console.log(err));\n    }\n  }\n\n  const inputStyle= `${searchResults.length > 0? \"rounded-none rounded-t-md\"\n  : \"rounded-md\"\n} focus:outline-none border-2 p-1.5 placeholder-ml-4 border-purple mt-2`\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={query}\n        onChange={handleQueryChange}\n        placeholder=\"Search people...\"\n        className={inputStyle}\n      />\n      <ul className=\"border w-48 mx-auto border-hoverGray rounded-b-md divide-y divide-hoverGray\">\n        {searchResults.slice(0, 3).map((person) => (\n          <li onClick={()=>setQuery(person)}\n            key={person.id}\n            className=\"px-4 py-2 hover:cursor-pointer hover:bg-hoverGray\"\n          >\n            {person}\n          </li>\n        ))}\n    </ul>\n    <button onClick={addUser} className=\"hover:bg-darkPurple rounded-md bg-purple px-4  text-white mb-8  mt-2\">add member</button> \n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}