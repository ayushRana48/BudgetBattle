{"ast":null,"code":"var _jsxFileName = \"/Users/aryarana/Desktop/plaid_app/client/src/PlaidToken.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect } from 'react';\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport { usePlaidLink } from 'react-plaid-link';\n// import './App.css'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PlaidAuth(_ref) {\n  _s();\n  let {\n    publicToken,\n    getToken,\n    currUser,\n    bankName\n  } = _ref;\n  const [account, setAccount] = useState();\n  useEffect(() => {\n    async function fetchData() {\n      let resp = await axios.post(\"/exchange_public_token\", {\n        public_token: publicToken\n      });\n      getToken({\n        accessToken: resp.data.accessToken,\n        bankName: bankName\n      });\n      const auth = await axios.post(\"/auth\", {\n        access_token: resp.data.accessToken\n      });\n      setAccount(auth.data.numbers.ach[0]);\n      await axios.put(\"http://localhost:3500/users/updateUserBankInfo\", {\n        user: currUser,\n        accessToken: resp.data.accessToken,\n        bankName: bankName\n      });\n    }\n    fetchData();\n  }, []);\n  return account && /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Account number: \", account.account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Routing number: \", account.routing]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(PlaidAuth, \"kdbFpNav45yYjoc+y6JdOSWhpco=\");\n_c = PlaidAuth;\nfunction PlaidToken(_ref2) {\n  _s2();\n  let {\n    getToken,\n    currUser\n  } = _ref2;\n  axios.defaults.baseURL = \"http://localhost:3500/plaid\";\n  const [linkToken, setLinkToken] = useState();\n  const [publicToken, setPublicToken] = useState();\n  const [bankName, setBankName] = useState();\n  useEffect(() => {\n    async function fetch() {\n      const response = await axios.post(\"/create_link_token\");\n      setLinkToken(response.data.link_token);\n      console.log(\"respnse\", response.data);\n    }\n    fetch();\n  }, []);\n  const x = linkToken;\n  const {\n    open,\n    ready\n  } = usePlaidLink({\n    token: linkToken,\n    onSuccess: (public_token, metadata) => {\n      console.log(\"success\", public_token, metadata);\n      setPublicToken(public_token);\n      setBankName(metadata.institution.name);\n      console.log(metadata.institution.name);\n    }\n  });\n  return publicToken ? /*#__PURE__*/_jsxDEV(PlaidAuth, {\n    currUser: currUser,\n    bankName: bankName,\n    getToken: getToken,\n    publicToken: publicToken\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 26\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"rounded-md bg-purple px-4 py-1 text-white mb-8 flex ml-auto mr-14 mt-6\",\n      onClick: () => open(),\n      disabled: !ready,\n      children: \"Connect a bank account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this);\n}\n_s2(PlaidToken, \"oupYb7jhh5tp5ccm1WjKxT/ClKU=\", false, function () {\n  return [usePlaidLink];\n});\n_c2 = PlaidToken;\nexport default PlaidToken;\nvar _c, _c2;\n$RefreshReg$(_c, \"PlaidAuth\");\n$RefreshReg$(_c2, \"PlaidToken\");","map":{"version":3,"names":["useEffect","React","useState","axios","usePlaidLink","jsxDEV","_jsxDEV","Fragment","_Fragment","PlaidAuth","_ref","_s","publicToken","getToken","currUser","bankName","account","setAccount","fetchData","resp","post","public_token","accessToken","data","auth","access_token","numbers","ach","put","user","children","fileName","_jsxFileName","lineNumber","columnNumber","routing","_c","PlaidToken","_ref2","_s2","defaults","baseURL","linkToken","setLinkToken","setPublicToken","setBankName","fetch","response","link_token","console","log","x","open","ready","token","onSuccess","metadata","institution","name","className","onClick","disabled","_c2","$RefreshReg$"],"sources":["/Users/aryarana/Desktop/plaid_app/client/src/PlaidToken.js"],"sourcesContent":["import {useEffect} from 'react'\nimport React, { useState } from 'react'\nimport axios from \"axios\";\nimport { usePlaidLink } from 'react-plaid-link';\n// import './App.css'\n\n\n function PlaidAuth({publicToken,getToken,currUser,bankName}) {\n  const [account, setAccount] = useState();\n\n  useEffect(() => {\n    async function fetchData() {\n      let resp = await axios.post(\"/exchange_public_token\", {public_token: publicToken});\n      getToken({accessToken:resp.data.accessToken,bankName:bankName})\n      const auth = await axios.post(\"/auth\", {access_token: resp.data.accessToken});\n      setAccount(auth.data.numbers.ach[0]);\n\n      await axios.put(\"http://localhost:3500/users/updateUserBankInfo\", {\n        user: currUser,\n        accessToken: resp.data.accessToken,\n        bankName: bankName\n      });\n\n    }\n    fetchData();\n  }, []);\n  return account && (\n      <>\n        <p>Account number: {account.account}</p>\n        <p>Routing number: {account.routing}</p>\n      </>\n  );\n\n}\n\nfunction PlaidToken({getToken,currUser}) {\n    axios.defaults.baseURL =\"http://localhost:3500/plaid\"\n\n    const [linkToken, setLinkToken] = useState();\n    const [publicToken, setPublicToken] = useState();\n    const [bankName,setBankName]=useState();\n\n\n    useEffect(() => {\n      async function fetch() {\n        const response = await axios.post(\"/create_link_token\");\n        setLinkToken(response.data.link_token);\n        console.log(\"respnse\", response.data)\n      }\n      fetch();\n    }, []);\n\n    const x = linkToken\n\n    const { open, ready } = usePlaidLink({\n      token: linkToken,\n      onSuccess: (public_token, metadata) => {\n        console.log(\"success\",public_token,metadata)\n        setPublicToken(public_token)\n        setBankName(metadata.institution.name)\n        console.log(metadata.institution.name)\n      },\n    });\n      \n    return publicToken? (<PlaidAuth currUser={currUser} bankName={bankName} getToken={getToken} publicToken={publicToken}></PlaidAuth>):\n     (<div>\n        <button  className=\"rounded-md bg-purple px-4 py-1 text-white mb-8 flex ml-auto mr-14 mt-6\" onClick={() => open()} disabled={!ready}>\n            Connect a bank account\n        </button>\n      </div>)\n\n    \n  }  \n  \n  \n\nexport default PlaidToken"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}