{"ast":null,"code":"var _jsxFileName = \"/Users/aryarana/Desktop/plaid_app/client/src/PlaidToken.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect } from 'react';\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport { usePlaidLink } from 'react-plaid-link';\n// import './App.css'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlaidAuth(_ref) {\n  _s();\n  let {\n    publicToken\n  } = _ref;\n  const [account, setAccount] = useState();\n  useEffect(() => {\n    async function fetchData() {\n      let accessToken = await axios.post(\"/exchange_public_token\", {\n        public_token: publicToken\n      });\n      console.log(\"accessToken\", accessToken.data);\n      // const auth = await axios.post(\"/auth\", {access_token: accessToken.data.accessToken});\n      // console.log(\"auth data \", auth.data);\n      // setAccount(auth.data.numbers.ach[0]);\n    }\n\n    fetchData();\n  }, []);\n  // return account && (\n  //     <>\n  //       <p>Account number: {account.account}</p>\n  //       <p>Routing number: {account.routing}</p>\n  //     </>\n  // );\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: publicToken\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n}\n_s(PlaidAuth, \"kdbFpNav45yYjoc+y6JdOSWhpco=\");\n_c = PlaidAuth;\nfunction PlaidToken() {\n  _s2();\n  axios.defaults.baseURL = \"http://localhost:3500/plaid\";\n  const [linkToken, setLinkToken] = useState();\n  const [publicToken, setPublicToken] = useState();\n  useEffect(() => {\n    async function fetch() {\n      const response = await axios.post(\"/create_link_token\");\n      setLinkToken(response.data.link_token);\n      console.log(\"respnse\", response.data);\n    }\n    fetch();\n  }, []);\n  const x = linkToken;\n  const {\n    open,\n    ready\n  } = usePlaidLink({\n    token: linkToken,\n    onSuccess: (public_token, metadata) => {\n      console.log(\"success\", public_token, metadata);\n      setPublicToken(public_token);\n    }\n  });\n  return publicToken ? /*#__PURE__*/_jsxDEV(PlaidAuth, {\n    publicToken: publicToken\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 26\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => open(),\n      disabled: !ready,\n      children: \"Connect a bank account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: x\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this);\n}\n_s2(PlaidToken, \"Ud8B8M4+4IV914OIkGUG8fBzXCc=\", false, function () {\n  return [usePlaidLink];\n});\n_c2 = PlaidToken;\nexport default PlaidToken;\nvar _c, _c2;\n$RefreshReg$(_c, \"PlaidAuth\");\n$RefreshReg$(_c2, \"PlaidToken\");","map":{"version":3,"names":["useEffect","React","useState","axios","usePlaidLink","jsxDEV","_jsxDEV","PlaidAuth","_ref","_s","publicToken","account","setAccount","fetchData","accessToken","post","public_token","console","log","data","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","PlaidToken","_s2","defaults","baseURL","linkToken","setLinkToken","setPublicToken","fetch","response","link_token","x","open","ready","token","onSuccess","metadata","onClick","disabled","_c2","$RefreshReg$"],"sources":["/Users/aryarana/Desktop/plaid_app/client/src/PlaidToken.js"],"sourcesContent":["import {useEffect} from 'react'\nimport React, { useState } from 'react'\nimport axios from \"axios\";\nimport { usePlaidLink } from 'react-plaid-link';\n// import './App.css'\n\n\n function PlaidAuth({publicToken}) {\n  const [account, setAccount] = useState();\n\n  useEffect(() => {\n    async function fetchData() {\n      let accessToken = await axios.post(\"/exchange_public_token\", {public_token: publicToken});\n      console.log(\"accessToken\", accessToken.data);\n      // const auth = await axios.post(\"/auth\", {access_token: accessToken.data.accessToken});\n      // console.log(\"auth data \", auth.data);\n      // setAccount(auth.data.numbers.ach[0]);\n    }\n    fetchData();\n  }, []);\n  // return account && (\n  //     <>\n  //       <p>Account number: {account.account}</p>\n  //       <p>Routing number: {account.routing}</p>\n  //     </>\n  // );\n    return(\n      <p>{publicToken}</p>\n    )\n}\n\nfunction PlaidToken() {\n    axios.defaults.baseURL =\"http://localhost:3500/plaid\"\n\n    const [linkToken, setLinkToken] = useState();\n    const [publicToken, setPublicToken] = useState();\n\n\n    useEffect(() => {\n      async function fetch() {\n        const response = await axios.post(\"/create_link_token\");\n        setLinkToken(response.data.link_token);\n        console.log(\"respnse\", response.data)\n      }\n      fetch();\n    }, []);\n\n    const x = linkToken\n\n    const { open, ready } = usePlaidLink({\n      token: linkToken,\n      onSuccess: (public_token, metadata) => {\n        console.log(\"success\",public_token,metadata)\n        setPublicToken(public_token)\n      },\n    });\n      \n    return publicToken? (<PlaidAuth publicToken={publicToken}></PlaidAuth>):\n     (<div>\n        <button onClick={() => open()} disabled={!ready}>\n            Connect a bank account\n        </button>\n        <p>{x}</p>\n      </div>)\n\n    \n  }  \n  \n  \n\nexport default PlaidToken"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}