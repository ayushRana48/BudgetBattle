{"ast":null,"code":"var _jsxFileName = \"/Users/aryarana/Desktop/plaid_app/client/src/dash/NewGroup.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport axios from \"axios\";\nimport Transactions from \"./Transactions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewGroup(_ref) {\n  _s();\n  let {\n    currentUser,\n    reRender\n  } = _ref;\n  const [groupName, setGroupName] = useState(\"\");\n  const [currUser, setCurrUser] = useState(currentUser);\n  function createGroup() {\n    let gpName;\n    if (groupName == \"\") {\n      const randInt = Math.floor(Math.random() * 100000);\n      gpName = \"Finance Flyers\" + randInt;\n    } else {\n      gpName = groupName;\n    }\n    console.log(\"current User from in\");\n    console.log(currUser);\n    const url = `http://localhost:3500/group/new`;\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"user\": currUser,\n        \"groupName\": gpName\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      reRender();\n    }).catch(err => console.log(err));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"rounded-md focus:outline-none border-2 p-1.5 placeholder-ml-4 border-purple\",\n        placeholder: \"Finance Flyers\",\n        type: \"text\",\n        name: \"Luser\",\n        value: groupName,\n        onChange: e => setGroupName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Group Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createGroup,\n      className: \"rounded-md bg-purple px-4 py-1 text-white mb-8  mt-2\",\n      children: \"Create New Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(NewGroup, \"ZcpJImJw6BWX5niXPnKF+fF3oPs=\");\n_c = NewGroup;\nvar _c;\n$RefreshReg$(_c, \"NewGroup\");","map":{"version":3,"names":["useState","useEffect","useNavigate","axios","Transactions","jsxDEV","_jsxDEV","NewGroup","_ref","_s","currentUser","reRender","groupName","setGroupName","currUser","setCurrUser","createGroup","gpName","randInt","Math","floor","random","console","log","url","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","err","className","children","placeholder","type","name","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/aryarana/Desktop/plaid_app/client/src/dash/NewGroup.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport axios from \"axios\";\nimport Transactions from \"./Transactions\";\n\nexport default function NewGroup({currentUser,reRender}){\n    const [groupName,setGroupName]= useState(\"\")\n    const [currUser,setCurrUser]= useState(currentUser)\n\n   \n    function createGroup(){\n        let gpName;\n        if(groupName==\"\"){\n            const randInt = Math.floor(Math.random() * 100000)\n            gpName=\"Finance Flyers\" + randInt\n        }\n        else{\n            gpName=groupName\n        }\n        console.log(\"current User from in\")\n        console.log(currUser)\n        const url = `http://localhost:3500/group/new`;\n        fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body:JSON.stringify({\n                \"user\":currUser,\n                \"groupName\":gpName\n            }),\n        })\n        .then(response => response.json())\n        .then(data => {\n            console.log(data)\n            reRender()\n        })\n        .catch(err => console.log(err));\n    }\n       \n\n   \n\n\n    return(\n        <div className=\"flex-col\">\n            <div>\n            <input className=\"rounded-md focus:outline-none border-2 p-1.5 placeholder-ml-4 border-purple\" placeholder=\"Finance Flyers\" type=\"text\" name=\"Luser\" value={groupName} onChange={e=>setGroupName(e.target.value)}></input>\n            </div>\n            <div><label>Group Name</label></div>\n            <button onClick ={createGroup}className=\"rounded-md bg-purple px-4 py-1 text-white mb-8  mt-2\">Create New Group</button>\n        </div>\n    ) \n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,eAAe,SAASC,QAAQA,CAAAC,IAAA,EAAwB;EAAAC,EAAA;EAAA,IAAvB;IAACC,WAAW;IAACC;EAAQ,CAAC,GAAAH,IAAA;EACnD,MAAM,CAACI,SAAS,EAACC,YAAY,CAAC,GAAEb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,QAAQ,EAACC,WAAW,CAAC,GAAEf,QAAQ,CAACU,WAAW,CAAC;EAGnD,SAASM,WAAWA,CAAA,EAAE;IAClB,IAAIC,MAAM;IACV,IAAGL,SAAS,IAAE,EAAE,EAAC;MACb,MAAMM,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,MAAM,CAAC;MAClDJ,MAAM,GAAC,gBAAgB,GAAGC,OAAO;IACrC,CAAC,MACG;MACAD,MAAM,GAACL,SAAS;IACpB;IACAU,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnCD,OAAO,CAACC,GAAG,CAACT,QAAQ,CAAC;IACrB,MAAMU,GAAG,GAAI,iCAAgC;IAC7CC,KAAK,CAACD,GAAG,EAAE;MACPE,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAAC;QAChB,MAAM,EAAChB,QAAQ;QACf,WAAW,EAACG;MAChB,CAAC;IACL,CAAC,CAAC,CACDc,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACVZ,OAAO,CAACC,GAAG,CAACW,IAAI,CAAC;MACjBvB,QAAQ,EAAE;IACd,CAAC,CAAC,CACDwB,KAAK,CAACC,GAAG,IAAId,OAAO,CAACC,GAAG,CAACa,GAAG,CAAC,CAAC;EACnC;EAMA,oBACI9B,OAAA;IAAK+B,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACrBhC,OAAA;MAAAgC,QAAA,eACAhC,OAAA;QAAO+B,SAAS,EAAC,6EAA6E;QAACE,WAAW,EAAC,gBAAgB;QAACC,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,OAAO;QAACC,KAAK,EAAE9B,SAAU;QAAC+B,QAAQ,EAAEC,CAAC,IAAE/B,YAAY,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpN,eACN3C,OAAA;MAAAgC,QAAA,eAAKhC,OAAA;QAAAgC,QAAA,EAAO;MAAU;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAQ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACpC3C,OAAA;MAAQ4C,OAAO,EAAGlC,WAAY;MAAAqB,SAAS,EAAC,sDAAsD;MAAAC,QAAA,EAAC;IAAgB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACtH;AAEd;AAACxC,EAAA,CAhDuBF,QAAQ;AAAA4C,EAAA,GAAR5C,QAAQ;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}