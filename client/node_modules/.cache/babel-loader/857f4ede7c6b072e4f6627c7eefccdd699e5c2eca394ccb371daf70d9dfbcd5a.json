{"ast":null,"code":"var _jsxFileName = \"/Users/aryarana/Desktop/plaid_app/client/src/sign/Register.js\",\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s2();\n  const [registerData, setRegisterData] = useState({\n    user: \"\",\n    password: \"\"\n  });\n  const [approve, setApprove] = useState(false);\n  function newUser() {\n    var _s = $RefreshSig$();\n    _s(fetch('http://localhost:3500/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: registerData.user,\n        pwd: registerData.password\n      })\n    }).then(response => response.json()).then(_s(data => {\n      _s();\n      console.log(data);\n      useNavigate().push('/in');\n    }, \"7z+bV9xHBQ1A1bt6m/1oQLk0tZA=\", false, function () {\n      return [useNavigate];\n    })), \"7z+bV9xHBQ1A1bt6m/1oQLk0tZA=\", false, function () {\n      return [useNavigate];\n    }).catch(err => alert(\"Username already taken\"));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signUp\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"Ruser\",\n      value: registerData.user,\n      onChange: e => setRegisterData(x => ({\n        ...x,\n        user: e.target.value\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"Rpwd\",\n      value: registerData.password,\n      onChange: e => setRegisterData(x => ({\n        ...x,\n        password: e.target.value\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: newUser,\n      children: \"register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s2(Register, \"NBlaXXN1s5yh+d4+GxWOrrQ36pw=\");\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Register","_s2","registerData","setRegisterData","user","password","approve","setApprove","newUser","_s","$RefreshSig$","fetch","method","headers","body","JSON","stringify","pwd","then","response","json","data","console","log","push","catch","err","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","value","onChange","e","x","target","onClick","_c","$RefreshReg$"],"sources":["/Users/aryarana/Desktop/plaid_app/client/src/sign/Register.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\n\nexport default function Register(){\n    const [registerData,setRegisterData] = useState({user:\"\",password:\"\"})\n    const [approve,setApprove]=useState(false)\n\n    function newUser(){\n        fetch('http://localhost:3500/register',{\n        method:'POST',\n        headers:{\n            'Content-Type':'application/json'\n        },\n        body: JSON.stringify({\n            user:registerData.user,\n            pwd:registerData.password\n        })\n        })\n        .then(response => response.json())\n        .then(data => {console.log(data)\n            useNavigate().push('/in')})\n        .catch(err=>alert(\"Username already taken\"))\n    }\n\n    return(\n        <div className='signUp'>\n            <h1>Sign Up</h1>\n            <input type=\"text\" name=\"Ruser\" value={registerData.user} \n            onChange={e=>setRegisterData((x)=>({...x, user:e.target.value}))}></input>\n            <input type=\"text\" name=\"Rpwd\" value={registerData.password } \n            onChange={e=>setRegisterData((x)=>({...x, password:e.target.value}))}></input>\n            <button onClick={newUser}>register</button>\n        </div>\n    )\n}\n  "],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,QAAQA,CAAA,EAAE;EAAAC,GAAA;EAC9B,MAAM,CAACC,YAAY,EAACC,eAAe,CAAC,GAAGR,QAAQ,CAAC;IAACS,IAAI,EAAC,EAAE;IAACC,QAAQ,EAAC;EAAE,CAAC,CAAC;EACtE,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAACZ,QAAQ,CAAC,KAAK,CAAC;EAE1C,SAASa,OAAOA,CAAA,EAAE;IAAA,IAAAC,EAAA,GAAAC,YAAA;IACdD,EAAA,CAAAE,KAAK,CAAC,gCAAgC,EAAC;MACvCC,MAAM,EAAC,MAAM;MACbC,OAAO,EAAC;QACJ,cAAc,EAAC;MACnB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBZ,IAAI,EAACF,YAAY,CAACE,IAAI;QACtBa,GAAG,EAACf,YAAY,CAACG;MACrB,CAAC;IACD,CAAC,CAAC,CACDa,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAAAT,EAAA,CAACY,IAAI,IAAI;MAAAZ,EAAA;MAACa,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MAC5BxB,WAAW,EAAE,CAAC2B,IAAI,CAAC,KAAK,CAAC;IAAA,CAAC;MAAA,QAA1B3B,WAAW;IAAA,GAAgB;MAAA,QAA3BA,WAAW;IAAA,GACd4B,KAAK,CAACC,GAAG,IAAEC,KAAK,CAAC,wBAAwB,CAAC,CAAC;EAChD;EAEA,oBACI5B,OAAA;IAAK6B,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACnB9B,OAAA;MAAA8B,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAChBlC,OAAA;MAAOmC,IAAI,EAAC,MAAM;MAACC,IAAI,EAAC,OAAO;MAACC,KAAK,EAAElC,YAAY,CAACE,IAAK;MACzDiC,QAAQ,EAAEC,CAAC,IAAEnC,eAAe,CAAEoC,CAAC,KAAI;QAAC,GAAGA,CAAC;QAAEnC,IAAI,EAACkC,CAAC,CAACE,MAAM,CAACJ;MAAK,CAAC,CAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC1ElC,OAAA;MAAOmC,IAAI,EAAC,MAAM;MAACC,IAAI,EAAC,MAAM;MAACC,KAAK,EAAElC,YAAY,CAACG,QAAU;MAC7DgC,QAAQ,EAAEC,CAAC,IAAEnC,eAAe,CAAEoC,CAAC,KAAI;QAAC,GAAGA,CAAC;QAAElC,QAAQ,EAACiC,CAAC,CAACE,MAAM,CAACJ;MAAK,CAAC,CAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC9ElC,OAAA;MAAQ0C,OAAO,EAAEjC,OAAQ;MAAAqB,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACzC;AAEd;AAAChC,GAAA,CA/BuBD,QAAQ;AAAA0C,EAAA,GAAR1C,QAAQ;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}