{"ast":null,"code":"var _jsxFileName = \"/Users/aryarana/Desktop/plaid_app/client/src/PlaidToken.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect } from 'react';\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport { usePlaidLink } from 'react-plaid-link';\n// import './App.css'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PlaidAuth(_ref) {\n  _s();\n  let {\n    publicToken,\n    getToken,\n    currUser\n  } = _ref;\n  const [account, setAccount] = useState();\n  useEffect(() => {\n    async function fetchData() {\n      let accessToken = await axios.post(\"/exchange_public_token\", {\n        public_token: publicToken\n      });\n      getToken(accessToken);\n      const auth = await axios.post(\"/auth\", {\n        access_token: accessToken.data.accessToken\n      });\n      setAccount(auth.data.numbers.ach[0]);\n      await axios.put(\"http://localhost:3500/users/updateUserBankInfo\", {\n        user: currUser,\n        accessToken: accessToken.data.accessToken,\n        bankName: \"bbbb\"\n      });\n    }\n    fetchData();\n  }, []);\n  return account && /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Account number: \", account.account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Routing number: \", account.routing]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(PlaidAuth, \"kdbFpNav45yYjoc+y6JdOSWhpco=\");\n_c = PlaidAuth;\nfunction PlaidToken(_ref2) {\n  _s2();\n  let {\n    getToken,\n    currUser\n  } = _ref2;\n  axios.defaults.baseURL = \"http://localhost:3500/plaid\";\n  const [linkToken, setLinkToken] = useState();\n  const [publicToken, setPublicToken] = useState();\n  useEffect(() => {\n    async function fetch() {\n      const response = await axios.post(\"/create_link_token\");\n      setLinkToken(response.data.link_token);\n      console.log(\"respnse\", response.data);\n    }\n    fetch();\n  }, []);\n  const x = linkToken;\n  const {\n    open,\n    ready\n  } = usePlaidLink({\n    token: linkToken,\n    onSuccess: (public_token, metadata) => {\n      console.log(\"success\", public_token, metadata);\n      setPublicToken(public_token);\n    }\n  });\n  return publicToken ? /*#__PURE__*/_jsxDEV(PlaidAuth, {\n    currUser: currUser,\n    getToken: getToken,\n    publicToken: publicToken\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 26\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => open(),\n      disabled: !ready,\n      children: \"Connect a bank account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: x\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);\n}\n_s2(PlaidToken, \"Ud8B8M4+4IV914OIkGUG8fBzXCc=\", false, function () {\n  return [usePlaidLink];\n});\n_c2 = PlaidToken;\nexport default PlaidToken;\nvar _c, _c2;\n$RefreshReg$(_c, \"PlaidAuth\");\n$RefreshReg$(_c2, \"PlaidToken\");","map":{"version":3,"names":["useEffect","React","useState","axios","usePlaidLink","jsxDEV","_jsxDEV","Fragment","_Fragment","PlaidAuth","_ref","_s","publicToken","getToken","currUser","account","setAccount","fetchData","accessToken","post","public_token","auth","access_token","data","numbers","ach","put","user","bankName","children","fileName","_jsxFileName","lineNumber","columnNumber","routing","_c","PlaidToken","_ref2","_s2","defaults","baseURL","linkToken","setLinkToken","setPublicToken","fetch","response","link_token","console","log","x","open","ready","token","onSuccess","metadata","onClick","disabled","_c2","$RefreshReg$"],"sources":["/Users/aryarana/Desktop/plaid_app/client/src/PlaidToken.js"],"sourcesContent":["import {useEffect} from 'react'\nimport React, { useState } from 'react'\nimport axios from \"axios\";\nimport { usePlaidLink } from 'react-plaid-link';\n// import './App.css'\n\n\n function PlaidAuth({publicToken,getToken,currUser}) {\n  const [account, setAccount] = useState();\n\n  useEffect(() => {\n    async function fetchData() {\n      let accessToken = await axios.post(\"/exchange_public_token\", {public_token: publicToken});\n      getToken(accessToken)\n      const auth = await axios.post(\"/auth\", {access_token: accessToken.data.accessToken});\n      setAccount(auth.data.numbers.ach[0]);\n\n      await axios.put(\"http://localhost:3500/users/updateUserBankInfo\", {\n        user: currUser,\n        accessToken: accessToken.data.accessToken,\n        bankName: \"bbbb\"\n      });\n\n    }\n    fetchData();\n  }, []);\n  return account && (\n      <>\n        <p>Account number: {account.account}</p>\n        <p>Routing number: {account.routing}</p>\n      </>\n  );\n\n}\n\nfunction PlaidToken({getToken,currUser}) {\n    axios.defaults.baseURL =\"http://localhost:3500/plaid\"\n\n    const [linkToken, setLinkToken] = useState();\n    const [publicToken, setPublicToken] = useState();\n\n\n    useEffect(() => {\n      async function fetch() {\n        const response = await axios.post(\"/create_link_token\");\n        setLinkToken(response.data.link_token);\n        console.log(\"respnse\", response.data)\n      }\n      fetch();\n    }, []);\n\n    const x = linkToken\n\n    const { open, ready } = usePlaidLink({\n      token: linkToken,\n      onSuccess: (public_token, metadata) => {\n        console.log(\"success\",public_token,metadata)\n        setPublicToken(public_token)\n      },\n    });\n      \n    return publicToken? (<PlaidAuth currUser={currUser} getToken={getToken} publicToken={publicToken}></PlaidAuth>):\n     (<div>\n        <button onClick={() => open()} disabled={!ready}>\n            Connect a bank account\n        </button>\n        <p>{x}</p>\n      </div>)\n\n    \n  }  \n  \n  \n\nexport default PlaidToken"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}