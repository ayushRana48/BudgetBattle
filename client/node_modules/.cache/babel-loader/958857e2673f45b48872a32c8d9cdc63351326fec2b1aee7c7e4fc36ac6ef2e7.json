{"ast":null,"code":"var _jsxFileName = \"/Users/aryarana/Desktop/plaid_app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { usePlaidLink } from 'react-plaid-link';\nimport PlaidToken from './PlaidToken';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  console.log(PlaidEnvironments);\n  const [registerData, setRegisterData] = useState({\n    user: \"\",\n    password: \"\"\n  });\n  const [loginData, setLoginData] = useState({\n    user: \"\",\n    password: \"\"\n  });\n  const [allUsers, setAllUsers] = useState([]);\n  const [approve, setApprove] = useState(false);\n  function newUser() {\n    fetch('http://localhost:3500/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: registerData.user,\n        pwd: registerData.password\n      })\n    }).then(response => response.json()).then(data => console.log(data)).catch(err => alert(\"Username already taken\"));\n  }\n  function logIn() {\n    fetch('http://localhost:3500/auth', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: loginData.user,\n        pwd: loginData.password\n      })\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      console.log(data);\n      setApprove(true);\n    }).catch(err => alert(\"Invalid username or password\"));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signUp\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Ruser\",\n        value: registerData.user,\n        onChange: e => setRegisterData(x => ({\n          ...x,\n          user: e.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Rpwd\",\n        value: registerData.password,\n        onChange: e => setRegisterData(x => ({\n          ...x,\n          password: e.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: newUser,\n        children: \"register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Luser\",\n        value: loginData.user,\n        onChange: e => setLoginData(x => ({\n          ...x,\n          user: e.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Lpwd\",\n        value: loginData.password,\n        onChange: e => setLoginData(x => ({\n          ...x,\n          password: e.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logIn,\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setApprove(false),\n      children: \"logOut\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), approve ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"You're In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this) : null, /*#__PURE__*/_jsxDEV(PlaidToken, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oj97RNG1Jh+Tiu+JozcDpUmplOw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","usePlaidLink","PlaidToken","jsxDEV","_jsxDEV","App","_s","console","log","PlaidEnvironments","registerData","setRegisterData","user","password","loginData","setLoginData","allUsers","setAllUsers","approve","setApprove","newUser","fetch","method","headers","body","JSON","stringify","pwd","then","response","json","data","catch","err","alert","logIn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","value","onChange","e","x","target","onClick","_c","$RefreshReg$"],"sources":["/Users/aryarana/Desktop/plaid_app/client/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { usePlaidLink } from 'react-plaid-link';\nimport PlaidToken from './PlaidToken';\n\n\n\n\n\nfunction App() {\n\n  console.log(PlaidEnvironments)\n  const [registerData,setRegisterData] = useState({user:\"\",password:\"\"})\n  const [loginData,setLoginData] = useState({user:\"\",password:\"\"})\n  const [allUsers,setAllUsers] = useState([])\n  const [approve,setApprove]=useState(false)\n\n  function newUser(){\n    fetch('http://localhost:3500/register',{\n      method:'POST',\n      headers:{\n        'Content-Type':'application/json'\n      },\n      body: JSON.stringify({\n        user:registerData.user,\n        pwd:registerData.password\n      })\n    })\n    .then(response => response.json())\n    .then(data => console.log(data))\n    .catch(err=>alert(\"Username already taken\"))\n  }\n\n  function logIn(){\n    fetch('http://localhost:3500/auth',{\n      method:'POST',\n      headers:{\n        'Content-Type':'application/json'\n      },\n      body: JSON.stringify({\n        user:loginData.user,\n        pwd:loginData.password\n      })\n    })\n    .then(response => {\n      return response.json()\n    })\n    .then(data => {\n      console.log(data)\n      setApprove(true)\n    })\n    .catch(err => alert(\"Invalid username or password\"))\n  }\n  \n\n  return (\n    <div className=\"App\">\n      <div className='signUp'>\n        <h1>Sign Up</h1>\n        <input type=\"text\" name=\"Ruser\" value={registerData.user} \n          onChange={e=>setRegisterData((x)=>({...x, user:e.target.value}))}></input>\n        <input type=\"text\" name=\"Rpwd\" value={registerData.password } \n          onChange={e=>setRegisterData((x)=>({...x, password:e.target.value}))}></input>\n        <button onClick={newUser}>register</button>\n      </div>\n\n      <div className='login'>\n        <h1>Log In</h1>\n        <input type=\"text\" name=\"Luser\" value={loginData.user} onChange={e=>setLoginData((x)=>({...x, user:e.target.value}))}></input>\n        <input type=\"text\" name=\"Lpwd\" value={loginData.password} onChange={e=>setLoginData((x)=>({...x, password:e.target.value}))}></input>\n        <button onClick={logIn}>login</button>\n      </div>\n      <br></br>\n      \n      <button onClick={()=>setApprove(false)}>logOut</button>\n      {approve?\n      <h1>You're In</h1>: null}\n      <PlaidToken></PlaidToken>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}