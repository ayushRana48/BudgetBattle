{"ast":null,"code":"\"use strict\";\n\n/* tslint:disable */\n/* eslint-disable */\n/**\n * The Plaid API\n * The Plaid REST API. Please see https://plaid.com/docs/api for more details.\n *\n * The version of the OpenAPI document: 2020-09-14_1.343.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createRequestFunction = exports.toPathString = exports.serializeDataIfNeeded = exports.setSearchParams = exports.setOAuthToObject = exports.setBearerAuthToObject = exports.setBasicAuthToObject = exports.setApiKeyToObject = exports.assertParamExists = exports.DUMMY_BASE_URL = void 0;\nconst base_1 = require(\"./base\");\n/**\n *\n * @export\n */\nexports.DUMMY_BASE_URL = 'https://example.com';\n/**\n *\n * @throws {RequiredError}\n * @export\n */\nconst assertParamExists = function (functionName, paramName, paramValue) {\n  if (paramValue === null || paramValue === undefined) {\n    throw new base_1.RequiredError(paramName, `Required parameter ${paramName} was null or undefined when calling ${functionName}.`);\n  }\n};\nexports.assertParamExists = assertParamExists;\n/**\n *\n * @export\n */\nconst setApiKeyToObject = function (object, keyParamName, configuration) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (configuration && configuration.apiKey) {\n      const localVarApiKeyValue = typeof configuration.apiKey === 'function' ? yield configuration.apiKey(keyParamName) : yield configuration.apiKey;\n      object[keyParamName] = localVarApiKeyValue;\n    }\n  });\n};\nexports.setApiKeyToObject = setApiKeyToObject;\n/**\n *\n * @export\n */\nconst setBasicAuthToObject = function (object, configuration) {\n  if (configuration && (configuration.username || configuration.password)) {\n    object[\"auth\"] = {\n      username: configuration.username,\n      password: configuration.password\n    };\n  }\n};\nexports.setBasicAuthToObject = setBasicAuthToObject;\n/**\n *\n * @export\n */\nconst setBearerAuthToObject = function (object, configuration) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (configuration && configuration.accessToken) {\n      const accessToken = typeof configuration.accessToken === 'function' ? yield configuration.accessToken() : yield configuration.accessToken;\n      object[\"Authorization\"] = \"Bearer \" + accessToken;\n    }\n  });\n};\nexports.setBearerAuthToObject = setBearerAuthToObject;\n/**\n *\n * @export\n */\nconst setOAuthToObject = function (object, name, scopes, configuration) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (configuration && configuration.accessToken) {\n      const localVarAccessTokenValue = typeof configuration.accessToken === 'function' ? yield configuration.accessToken(name, scopes) : yield configuration.accessToken;\n      object[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n    }\n  });\n};\nexports.setOAuthToObject = setOAuthToObject;\n/**\n *\n * @export\n */\nconst setSearchParams = function (url) {\n  const searchParams = new URLSearchParams(url.search);\n  for (var _len = arguments.length, objects = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    objects[_key - 1] = arguments[_key];\n  }\n  for (const object of objects) {\n    for (const key in object) {\n      if (Array.isArray(object[key])) {\n        searchParams.delete(key);\n        for (const item of object[key]) {\n          searchParams.append(key, item);\n        }\n      } else {\n        searchParams.set(key, object[key]);\n      }\n    }\n  }\n  url.search = searchParams.toString();\n};\nexports.setSearchParams = setSearchParams;\n/**\n *\n * @export\n */\nconst serializeDataIfNeeded = function (value, requestOptions, configuration) {\n  const nonString = typeof value !== 'string';\n  const needsSerialization = nonString && configuration && configuration.isJsonMime ? configuration.isJsonMime(requestOptions.headers['Content-Type']) : nonString;\n  return needsSerialization ? JSON.stringify(value !== undefined ? value : {}) : value || \"\";\n};\nexports.serializeDataIfNeeded = serializeDataIfNeeded;\n/**\n *\n * @export\n */\nconst toPathString = function (url) {\n  return url.pathname + url.search + url.hash;\n};\nexports.toPathString = toPathString;\n/**\n *\n * @export\n */\nconst createRequestFunction = function (axiosArgs, globalAxios, BASE_PATH, configuration) {\n  return function () {\n    let axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : globalAxios;\n    let basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;\n    const axiosRequestArgs = Object.assign(Object.assign({}, axiosArgs.options), {\n      url: ((configuration === null || configuration === void 0 ? void 0 : configuration.basePath) || basePath) + axiosArgs.url\n    });\n    return axios.request(axiosRequestArgs);\n  };\n};\nexports.createRequestFunction = createRequestFunction;","map":{"version":3,"names":["base_1","require","exports","DUMMY_BASE_URL","assertParamExists","functionName","paramName","paramValue","undefined","RequiredError","setApiKeyToObject","object","keyParamName","configuration","apiKey","localVarApiKeyValue","setBasicAuthToObject","username","password","setBearerAuthToObject","accessToken","setOAuthToObject","name","scopes","localVarAccessTokenValue","setSearchParams","url","searchParams","URLSearchParams","search","_len","arguments","length","objects","Array","_key","key","isArray","delete","item","append","set","toString","serializeDataIfNeeded","value","requestOptions","nonString","needsSerialization","isJsonMime","headers","JSON","stringify","toPathString","pathname","hash","createRequestFunction","axiosArgs","globalAxios","BASE_PATH","axios","basePath","axiosRequestArgs","Object","assign","options","request"],"sources":["/Users/aryarana/Desktop/plaid_app/client/node_modules/plaid/common.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * The Plaid API\n * The Plaid REST API. Please see https://plaid.com/docs/api for more details.\n *\n * The version of the OpenAPI document: 2020-09-14_1.343.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport { Configuration } from \"./configuration\";\nimport { RequiredError,ã€€RequestArgs } from \"./base\";\nimport { AxiosInstance } from 'axios';\n\n/**\n *\n * @export\n */\nexport const DUMMY_BASE_URL = 'https://example.com'\n\n/**\n *\n * @throws {RequiredError}\n * @export\n */\nexport const assertParamExists = function (functionName: string, paramName: string, paramValue: unknown) {\n    if (paramValue === null || paramValue === undefined) {\n        throw new RequiredError(paramName, `Required parameter ${paramName} was null or undefined when calling ${functionName}.`);\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setApiKeyToObject = async function (object: any, keyParamName: string, configuration?: Configuration) {\n    if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue = typeof configuration.apiKey === 'function'\n            ? await configuration.apiKey(keyParamName)\n            : await configuration.apiKey;\n        object[keyParamName] = localVarApiKeyValue;\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setBasicAuthToObject = function (object: any, configuration?: Configuration) {\n    if (configuration && (configuration.username || configuration.password)) {\n        object[\"auth\"] = { username: configuration.username, password: configuration.password };\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setBearerAuthToObject = async function (object: any, configuration?: Configuration) {\n    if (configuration && configuration.accessToken) {\n        const accessToken = typeof configuration.accessToken === 'function'\n            ? await configuration.accessToken()\n            : await configuration.accessToken;\n        object[\"Authorization\"] = \"Bearer \" + accessToken;\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setOAuthToObject = async function (object: any, name: string, scopes: string[], configuration?: Configuration) {\n    if (configuration && configuration.accessToken) {\n        const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n            ? await configuration.accessToken(name, scopes)\n            : await configuration.accessToken;\n        object[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setSearchParams = function (url: URL, ...objects: any[]) {\n    const searchParams = new URLSearchParams(url.search);\n    for (const object of objects) {\n        for (const key in object) {\n            if (Array.isArray(object[key])) {\n                searchParams.delete(key);\n                for (const item of object[key]) {\n                    searchParams.append(key, item);\n                }\n            } else {\n                searchParams.set(key, object[key]);\n            }\n        }\n    }\n    url.search = searchParams.toString();\n}\n\n/**\n *\n * @export\n */\nexport const serializeDataIfNeeded = function (value: any, requestOptions: any, configuration?: Configuration) {\n    const nonString = typeof value !== 'string';\n    const needsSerialization = nonString && configuration && configuration.isJsonMime\n        ? configuration.isJsonMime(requestOptions.headers['Content-Type'])\n        : nonString;\n    return needsSerialization\n        ? JSON.stringify(value !== undefined ? value : {})\n        : (value || \"\");\n}\n\n/**\n *\n * @export\n */\nexport const toPathString = function (url: URL) {\n    return url.pathname + url.search + url.hash\n}\n\n/**\n *\n * @export\n */\nexport const createRequestFunction = function (axiosArgs: RequestArgs, globalAxios: AxiosInstance, BASE_PATH: string, configuration?: Configuration) {\n    return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n        const axiosRequestArgs = {...axiosArgs.options, url: (configuration?.basePath || basePath) + axiosArgs.url};\n        return axios.request(axiosRequestArgs);\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}